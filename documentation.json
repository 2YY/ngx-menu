{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "classes": [],
    "directives": [
        {
            "name": "NgxMenuItemDirective",
            "id": "directive-NgxMenuItemDirective-3604335ecd307a6e0203a7d71df5599e",
            "file": "projects/ngx-menu/src/lib/ngx-menu-item.directive.ts",
            "type": "directive",
            "description": "",
            "sourceCode": "import { Directive, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { FocusableOption, FocusOrigin } from '@angular/cdk/a11y';\n\n@Directive({\n\tselector: '[libNgxMenuItem]',\n})\nexport class NgxMenuItemDirective implements FocusableOption {\n\t@Output() focusReceived = new EventEmitter<FocusOrigin>();\n\n\tconstructor(private elementRef: ElementRef) {}\n\n\tfocus(origin?: FocusOrigin): void {\n\t\tthis.focusReceived.emit(origin);\n\t\tthis.elementRef.nativeElement.focus();\n\t}\n}\n",
            "selector": "[libNgxMenuItem]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "focusReceived",
                    "defaultValue": "new EventEmitter<FocusOrigin>()",
                    "line": 8,
                    "type": "EventEmitter"
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "focus",
                    "args": [
                        {
                            "name": "origin",
                            "type": "FocusOrigin",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "jsdoctags": [
                        {
                            "name": "origin",
                            "type": "FocusOrigin",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "implements": [
                "FocusableOption"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef"
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "ExampleComponent",
            "id": "component-ExampleComponent-8292e8a74f19883401a3e6824a3e3bde",
            "file": "projects/ngx-menu/src/stories/Menu.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-example",
            "styleUrls": [],
            "styles": [
                "\n\t\tbutton:focus {color: red;}\n\t\tbutton:focus::after {content: ' (focused!)';}\n\t"
            ],
            "template": "<p *ngIf=\"lastFocusedButtonNumber !== null\">Last focused button is Button {{ lastFocusedButtonNumber }}</p>\n<button libNgxMenuItem (focusReceived)=\"lastFocusedButtonNumber = 1\">Button 1</button>\n<button libNgxMenuItem (focusReceived)=\"lastFocusedButtonNumber = 2\">Button 2</button>\n<button libNgxMenuItem (focusReceived)=\"lastFocusedButtonNumber = 3\">Button 3</button>\n<button libNgxMenuItem (focusReceived)=\"lastFocusedButtonNumber = 4\">Button 4</button>\n<button libNgxMenuItem (focusReceived)=\"lastFocusedButtonNumber = 5\">Button 5</button>\n\t",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lastFocusedButtonNumber",
                    "defaultValue": "null",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { moduleMetadata } from '@storybook/angular';\nimport { CommonModule } from '@angular/common';\nimport { Story, Meta } from '@storybook/angular/types-6-0';\nimport { Component, NgModule } from '@angular/core';\nimport { NgxMenuModule } from '../lib/ngx-menu.module';\n\n@Component({\n\tselector: 'lib-example',\n\ttemplate: `\n\t\t<p *ngIf=\"lastFocusedButtonNumber !== null\">Last focused button is Button {{ lastFocusedButtonNumber }}</p>\n\t\t<button libNgxMenuItem (focusReceived)=\"lastFocusedButtonNumber = 1\">Button 1</button>\n\t\t<button libNgxMenuItem (focusReceived)=\"lastFocusedButtonNumber = 2\">Button 2</button>\n\t\t<button libNgxMenuItem (focusReceived)=\"lastFocusedButtonNumber = 3\">Button 3</button>\n\t\t<button libNgxMenuItem (focusReceived)=\"lastFocusedButtonNumber = 4\">Button 4</button>\n\t\t<button libNgxMenuItem (focusReceived)=\"lastFocusedButtonNumber = 5\">Button 5</button>\n\t`,\n\tstyles: [`\n\t\tbutton:focus {color: red;}\n\t\tbutton:focus::after {content: ' (focused!)';}\n\t`]\n})\nclass ExampleComponent {\n\tlastFocusedButtonNumber: number | null = null;\n}\n\n@NgModule({\n\tdeclarations: [ExampleComponent],\n\timports: [NgxMenuModule],\n\texports: [ExampleComponent]\n})\nclass ExampleModule {}\n\nexport default {\n\ttitle: 'Example/Menu',\n\tcomponent: ExampleComponent,\n\tdecorators: [\n\t\tmoduleMetadata({\n\t\t\tdeclarations: [ExampleComponent],\n\t\t\timports: [CommonModule, ExampleModule],\n\t\t}),\n\t],\n} as Meta;\n\nconst Template: Story<ExampleComponent> = (args: ExampleComponent) => ({\n\tcomponent: ExampleComponent,\n\tprops: args,\n});\n\nexport const Demo = Template.bind({});\nDemo.args = {};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n\t\tbutton:focus {color: red;}\n\t\tbutton:focus::after {content: ' (focused!)';}\n\t\n"
        },
        {
            "name": "NgxMenuComponent",
            "id": "component-NgxMenuComponent-5091539db6d5a6b42dc7601a2cc67958",
            "file": "projects/ngx-menu/src/lib/ngx-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-ngx-menu",
            "styleUrls": [
                "./ngx-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ngx-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "focusKeyManagerMenuItems",
                    "type": "FocusKeyManager<NgxMenuItemDirective>",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "menuItemsRef",
                    "type": "QueryList<NgxMenuItemDirective>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "NgxMenuItemDirective, {read: NgxMenuItemDirective}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ContentChildren, QueryList } from '@angular/core';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { NgxMenuItemDirective } from './ngx-menu-item.directive';\n\n@Component({\n\tselector: 'lib-ngx-menu',\n\ttemplateUrl: './ngx-menu.component.html',\n\tstyleUrls: ['./ngx-menu.component.scss'],\n})\nexport class NgxMenuComponent implements AfterViewInit {\n\n\t@ContentChildren(NgxMenuItemDirective, {read: NgxMenuItemDirective}) menuItemsRef: QueryList<NgxMenuItemDirective>;\n\tfocusKeyManagerMenuItems: FocusKeyManager<NgxMenuItemDirective>;\n\n\tngAfterViewInit(): void {\n\t\tthis.focusKeyManagerMenuItems = new FocusKeyManager<NgxMenuItemDirective>(this.menuItemsRef).withWrap();\n\t}\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./ngx-menu.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div (keydown)=\"focusKeyManagerMenuItems.onKeydown($event)\">\n\t<ng-content></ng-content>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "ExampleModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ExampleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "NgxMenuModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ExampleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NgxMenuModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NgxMenuComponent"
                        },
                        {
                            "name": "NgxMenuItemDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NgxMenuComponent"
                        },
                        {
                            "name": "NgxMenuItemDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-menu/src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Demo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-menu/src/stories/Menu.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-menu/src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ngx-menu/src/stories/Menu.stories.ts",
                "type": "Story<ExampleComponent>",
                "defaultValue": "(args: ExampleComponent) => ({\n\tcomponent: ExampleComponent,\n\tprops: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/ngx-menu/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-menu/src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-menu/src/test.ts",
                    "type": "literal type"
                }
            ],
            "projects/ngx-menu/src/stories/Menu.stories.ts": [
                {
                    "name": "Demo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-menu/src/stories/Menu.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ngx-menu/src/stories/Menu.stories.ts",
                    "type": "Story<ExampleComponent>",
                    "defaultValue": "(args: ExampleComponent) => ({\n\tcomponent: ExampleComponent,\n\tprops: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ngx-menu/src/lib/ngx-menu-item.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "NgxMenuItemDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-menu/src/lib/ngx-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgxMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-menu/src/stories/Menu.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExampleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-menu/src/stories/Menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Demo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-menu/src/stories/Menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-menu/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ngx-menu/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}